
.lay-body{}
.lay-header{}
.lay-container{margin:0 auto;width:980px;padding:0 10px;position:relative;*zoom:1;}
.lay-wrapper{margin:0 auto;width:980px;padding:0 10px;position:relative;*zoom:1;}
.lay-content{margin:0 auto;width:980px;padding:0 10px;position:relative;*zoom:1;}
.lay-maincol{display:block;float:left;margin-right:20px;width:780px;min-height:1px;}
.lay-sidecol{display:block;float:left;margin-right:20px;width:180px;min-height:1px;}
.lay-footer{}

/* grid
  这边相当于是手脚架的内容。
  现在自己暂时还是参考普洱的代码来，但是这边在理论上应该是可以通过这种方式来实现页面的响应式布局。
  具体的实现代码自己可以通过研究bootstrap来实现
  grid只是为了实现页面的快熟布局，但是并不推荐使用，因为每个页面布局都应该又对应的意义。
*/

.lay-grid{display:block;float:left;margin-right:20px;min-height:1px;}
.lay-grid-1{width:30px;}
.lay-grid-2{width:80px;}
.lay-grid-3{width:130px;}
.lay-grid-4{width:180px;}
.lay-grid-5{width:230px;}
.lay-grid-6{width:280px;}
.lay-grid-7{width:330px;}
.lay-grid-8{width:380px;}
.lay-grid-9{width:430px;}
.lay-grid-10{width:480px;}
.lay-grid-11{width:530px;}
.lay-grid-12{width:580px;}
.lay-grid-13{width:630px;}
.lay-grid-14{width:680px;}
.lay-grid-15{width:730px;}
.lay-grid-16{width:780px;}
.lay-grid-17{width:830px;}
.lay-grid-18{width:880px;}
.lay-grid-19{width:930px;}
.lay-grid-20{width:980px;}
.last{margin-right:0;}